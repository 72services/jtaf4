application.version=@project.version@

server.port=${PORT:8484}
# Because the app runs behind a load balancer
server.forward-headers-strategy=native

server.tomcat.max-http-form-post-size=10MB

management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

spring.cloud.gcp.sql.database-name=jtaf4
spring.cloud.gcp.sql.instance-connection-name=jtaf-cloud:europe-west6:jtaf-postgresql
spring.datasource.username=jtaf4
spring.datasource.password=${sm://jtaf-postgresql-password}

vaadin.whitelisted-packages=ch.jtaf

spring.mustache.check-template-location=false

logging.level.org.atmosphere=warn

jtaf.public.address=http://localhost:8484

# For encryption of JWT tokens
# change this parameter in production servers, you can generate a key by running `openssl rand -base64 32` and then passing the
# result by using the parameter `--jwt.auth.secret=` to servlet container
jwt.auth.secret=TdysC+ETveB5y/Oiaug4RFifjsBjnRkL2mXWbAt1GCI=
